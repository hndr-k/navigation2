<!--
  This Behavior Tree follows a dynamic pose to a certain distance
-->

<root main_tree_to_execute="MainTree">
  <BehaviorTree ID="MainTree">
    <PipelineSequence name="NavigateWithReplanning">
      <RateController hz="1.0">
        <Sequence>
          <GoalUpdater input_goal="{goal}" output_goal="{updated_goal}">
            <ComputePathToPose goal="{updated_goal}" path="{path}" planner_id="GridBased"/>
          </GoalUpdater>
         <TruncatePath distance="1.0" input_path="{path}" output_path="{truncated_path}"/>
        </Sequence>
      </RateController>
      <KeepRunningUntilFailure>
        <FollowPath path="{truncated_path}" controller_id="FollowPath"/>
      </KeepRunningUntilFailure>
    </PipelineSequence>
  </BehaviorTree>
</root>

<!--
  This Behavior Tree replans the global path periodically at 1 Hz and it also has
  recovery actions specific to planning / control as well as general system issues.
  This will be continuous if a kinematically valid planner is selected.
-->
<root main_tree_to_execute="MainTree">
  <BehaviorTree ID="MainTree">
    <RecoveryNode number_of_retries="6" name="NavigateRecovery">
      <PipelineSequence name="NavigateWithReplanning">
        <RateController hz="1.0">
          <RecoveryNode number_of_retries="1" name="ComputePathToPose">
            <ComputePathToPose goal="{goal}" path="{path}" planner_id="GridBased"/>
            <ReactiveFallback name="ComputePathToPoseRecoveryFallback">
              <GoalUpdated/>
              <ClearEntireCostmap name="ClearGlobalCostmap-Context" service_name="global_costmap/clear_entirely_global_costmap"/>
            </ReactiveFallback>
          </RecoveryNode>
        </RateController>
        <RecoveryNode number_of_retries="1" name="FollowPath">
          <FollowPath path="{path}" controller_id="FollowPath"/>
          <ReactiveFallback name="FollowPathRecoveryFallback">
            <GoalUpdated/>
            <ClearEntireCostmap name="ClearLocalCostmap-Context" service_name="local_costmap/clear_entirely_local_costmap"/>
          </ReactiveFallback>
        </RecoveryNode>
      </PipelineSequence>
      <ReactiveFallback name="RecoveryFallback">
        <GoalUpdated/>
        <RoundRobin name="RecoveryActions">
          <Sequence name="ClearingActions">
            <ClearEntireCostmap name="ClearLocalCostmap-Subtree" service_name="local_costmap/clear_entirely_local_costmap"/>
            <ClearEntireCostmap name="ClearGlobalCostmap-Subtree" service_name="global_costmap/clear_entirely_global_costmap"/>
          </Sequence>
          <Spin spin_dist="1.57"/>
          <Wait wait_duration="5"/>
          <BackUp backup_dist="0.15" backup_speed="0.025"/>
        </RoundRobin>
      </ReactiveFallback>
    </RecoveryNode>
  </BehaviorTree>



<TreeNodesModel>
    <!-- ############################### ACTION NODES ################################# -->
    <Action ID="BackUp">
      <input_port name="backup_dist">Distance to backup</input_port>
      <input_port name="backup_speed">Speed at which to backup</input_port>
    </Action>

    <Action ID="ClearEntireCostmap">
      <input_port name="service_name">Service name</input_port>
    </Action>

    <Action ID="MapfCallService">
      <input_port name="service_name">Service name</input_port>
      <input_port name="identifier">Robotino ID</input_port>
      <input_port name="goal">Destination to plan to</input_port>
      <output_port name="mapf_goals">Path of MAPF planner</output_port>
    </Action>

    <Action ID="ComputePathToPose">
      <input_port name="goal">Destination to plan to</input_port>
      <input_port name="start">Start pose of the path if overriding current robot pose</input_port>
      <output_port name="path">Path created by ComputePathToPose node</output_port>
      <input_port name="planner_id"/>
    </Action>

    <Action ID="ComputePathThroughPoses">
      <input_port name="goals">Destinations to plan through</input_port>
      <input_port name="start">Start pose of the path if overriding current robot pose</input_port>
      <output_port name="path">Path created by ComputePathToPose node</output_port>
      <input_port name="planner_id"/>
    </Action>

    <Action ID="RemovePassedGoals">
      <input_port name="input_goals">Input goals to remove if passed</input_port>
      <input_port name="radius">Radius tolerance on a goal to consider it passed</input_port>
      <output_port name="output_goals">Set of goals after removing any passed</output_port>
    </Action>

    <Action ID="FollowPath">
      <input_port name="controller_id" default="FollowPath"/>
      <input_port name="path">Path to follow</input_port>
      <input_port name="goal_checker_id" default="GoalChecker">Goal checker</input_port>
    </Action>

    <Action ID="NavigateToPose">
        <input_port name="goal">Goal</input_port>
    </Action>

    <Action ID="NavigateThroughPoses">
        <input_port name="goals">Goals</input_port>
    </Action>

    <Action ID="ReinitializeGlobalLocalization">
    </Action>

    <Action ID="TruncatePath">
        <input_port name="distance">Distance before goal to truncate</input_port>
        <input_port name="input_path">Path to truncate</input_port>
        <output_port name="output_path">Truncated path to utilize</output_port>
    </Action>

    <Action ID="PlannerSelector">
        <input_port name="topic_name">Name of the topic to receive planner selection commands</input_port>
        <input_port name="default_planner">Default planner of the planner selector</input_port>
        <output_port name="selected_planner">Name of the selected planner received from the topic subcription</output_port>
    </Action>

    <Action ID="ControllerSelector">
        <input_port name="topic_name">Name of the topic to receive controller selection commands</input_port>
        <input_port name="default_controller">Default controller of the controller selector</input_port>
        <output_port name="selected_controller">Name of the selected controller received from the topic subcription</output_port>
    </Action>

    <Action ID="GoalCheckerSelector">
        <input_port name="topic_name">Name of the topic to receive goal checker selection commands</input_port>
        <input_port name="default_goal_checker">Default goal checker of the controller selector</input_port>
        <output_port name="selected_goal_checker">Name of the selected goal checker received from the topic subcription</output_port>
    </Action>

    <Action ID="Spin">
      <input_port name="spin_dist">Spin distance</input_port>
    </Action>

    <Action ID="Wait">
      <input_port name="wait_duration">Wait time</input_port>
    </Action>

    <!-- ############################### CONDITION NODES ############################## -->
    <Condition ID="GoalReached">
        <input_port name="goal">Destination</input_port>
    </Condition>

    <Condition ID="IsStuck"/>

    <Condition ID="TransformAvailable">
      <input_port name="child">Child frame for transform</input_port>
      <input_port name="parent">Parent frame for transform</input_port>
    </Condition>

    <Condition ID="GoalUpdated"/>

    <Condition ID="IsBatteryLow">
      <input_port name="min_battery">Min battery % or voltage before triggering</input_port>
      <input_port name="battery_topic">Topic for battery info</input_port>
      <input_port name="is_voltage">Bool if check based on voltage or total %</input_port>
    </Condition>

    <Condition ID="DistanceTraveled">
      <input_port name="distance">Distance to check if passed</input_port>
      <input_port name="global_frame">reference frame to check in</input_port>
      <input_port name="robot_base_frame">Robot frame to check relative to global_frame</input_port>
    </Condition>

    <Condition ID="TimeExpired">
      <input_port name="seconds">Time to check if expired</input_port>
    </Condition>

    <Condition ID="InitialPoseReceived">
    </Condition>
    <!-- ############################### CONTROL NODES ################################ -->
    <Control ID="PipelineSequence"/>

    <Control ID="RecoveryNode">
      <input_port name="number_of_retries">Number of retries</input_port>
    </Control>

    <Control ID="RoundRobin"/>

    <!-- ############################### DECORATOR NODES ############################## -->
    <Decorator ID="RateController">
      <input_port name="hz">Rate</input_port>
    </Decorator>

    <Decorator ID="DistanceController">
      <input_port name="distance">Distance</input_port>
    </Decorator>

    <Decorator ID="SingleTrigger">
    </Decorator>

    <Decorator ID="GoalUpdater">
      <input_port name="input_goal">Original goal in</input_port>
      <output_port name="output_goal">Output goal set by subscription</output_port>
    </Decorator>

    <Decorator ID="SpeedController">
      <input_port name="min_rate">Minimum rate</input_port>
      <input_port name="max_rate">Maximum rate</input_port>
      <input_port name="min_speed">Minimum speed</input_port>
      <input_port name="max_speed">Maximum speed</input_port>
      <input_port name="filter_duration">Duration (secs) for velocity smoothing filter</input_port>
    </Decorator>
</TreeNodesModel>
</root>